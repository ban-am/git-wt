{"version":3,"sources":["stores/eventStore.ts","stores/apiStore.ts","stores/userStore.ts","stores/rootStore.ts","pages/GitlabForm.tsx","pages/User.tsx","pages/EventFilterForm.tsx","pages/Events.tsx","App.tsx","index.tsx"],"names":["dayjs","require","EventStore","observable","ref","rootStore","loadEvents","a","result","evnFilter","processParams","userId","userStore","user","id","apiStore","api","Users","events","data","length","push","this","obj","params","item","name","value","action","d","Date","newMonth","getMonth","setFullYear","getFullYear","setMonth","date","format","daysInMonth","getLastDayOfMonth","index","splice","newValue","evn","runInAction","processEvents","console","log","grupedEvents","groupBy","created_at","split","i","ApiStore","reaction","token","window","localStorage","setItem","removeItem","getItem","Gitlab","host","UserStore","loadingUser","current","err","configure","enforceActions","RootStoreContext","createContext","eventStore","Title","Typography","observer","useContext","setToken","createApi","getUser","Container","level","title","href","overlayStyle","fontSize","QuestionCircleOutlined","translate","style","color","Group","compact","width","placeholder","onChange","e","target","type","danger","loading","icon","CheckOutlined","SearchOutlined","onClick","setParamName","setParamValue","addParam","getEvents","removeParam","List","Item","map","key","defaultValue","MinusOutlined","Scroll","Link","Element","createObj","x","newDate","setTime","getTime","getTimezoneOffset","push_data","action_name","ref_type","note","target_title","target_type","className","Search","size","enterButton","onSearch","open","float","Object","keys","activeClass","to","spy","smooth","duration","list","dot","ClockCircleOutlined","text","MessageOutlined","DeleteOutlined","CheckCircleOutlined","PlusCircleOutlined","ForkOutlined","print","App","useEffect","GitlabOutlined","direction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e2db96b.chunk.js","sourcesContent":["import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { EventFilterParams } from \"../models/Event\";\r\nimport { Dictionary, groupBy } from \"underscore\";\r\nvar dayjs = require('dayjs');\r\n\r\nexport default class EventStore {\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable.ref events: any[] = [];\r\n    @observable.ref grupedEvents: { [time: string]: any[]; } = {}\r\n    @observable processedEvents: any[] = [];\r\n    @observable ignoredFileds: string[] = [\"author\", \"author_username\", \"author_id\", \"commit_count\", \"commit_from\", \"commit_to\", \"project_id\", \"target_id\", \"target_iid\", \"position\"];\r\n\r\n    @action getLastDayOfMonth = (): string => {\r\n        var d = new Date();\r\n        var newMonth = d.getMonth() - 1;\r\n        if(newMonth < 0){\r\n            newMonth += 12;\r\n            d.setFullYear(d.getFullYear() - 1);\r\n        }\r\n        d.setMonth(newMonth);\r\n\r\n        let date = dayjs(d);\r\n\r\n        return date.format('YYYY-MM') + '-' + date.daysInMonth();\r\n    }\r\n\r\n    @observable params: EventFilterParams[] = [{\r\n        name: 'after',\r\n        value: this.getLastDayOfMonth()\r\n    } as EventFilterParams];\r\n\r\n    @action addParam = () => {\r\n        this.params.push({\r\n            name: '',\r\n            value: ''\r\n        });\r\n    }\r\n\r\n\r\n    @action removeParam = (index: number) => {\r\n        this.params.splice(index, 1);\r\n    }\r\n\r\n    @action setParamName = (newValue: any, id: number) => {\r\n        this.params[id]['name'] = newValue;\r\n    };\r\n\r\n    @action setParamValue = (newValue: any, id: number) => {\r\n        this.params[id]['value'] = newValue;\r\n    };\r\n\r\n    @action getEvents = async () => {\r\n        if (!this.rootStore.userStore.user)\r\n            return;\r\n        try {\r\n            var evn = await this.loadEvents();\r\n            runInAction(() => {\r\n                this.events = evn;\r\n            });\r\n            this.processEvents();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    loadEvents = async () => {\r\n        var result: any[] = [];\r\n        var evnFilter = this.processParams();\r\n        var userId = this.rootStore.userStore.user!.id;\r\n        while (true) {\r\n            var data = await this.rootStore.apiStore.api.Users.events(userId, evnFilter);\r\n            if (data.length === 0) {\r\n                break;\r\n            }\r\n            evnFilter['page'] += 1;\r\n            result.push(...data);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    processParams(): any {\r\n        var obj: any = {};\r\n        for (var item of this.params) {\r\n            if (item.name)\r\n                obj[item.name] = item.value;\r\n        }\r\n        obj['perPage'] = 50;\r\n        obj['page'] = 1;\r\n        return obj;\r\n    }\r\n\r\n    @action processEvents = () => {\r\n        var result: { [id: string]: any[]; } = {}\r\n        var grupedEvents: Dictionary<any[]> = groupBy(this.events, (obj: any) => obj.created_at.split('T')[0]);\r\n\r\n        for (var item in grupedEvents) {\r\n            result[item] = [];\r\n            for (let i = 0; i < grupedEvents[item].length; i++) {\r\n                result[item].push(grupedEvents[item][i]);\r\n            }\r\n        }\r\n        runInAction(() => {\r\n            this.grupedEvents = result;\r\n        });\r\n    }\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, reaction, action } from \"mobx\";\r\nimport { Gitlab } from \"@gitbeaker/browser\";\r\n\r\nexport default class ApiStore {\r\n    rootStore: RootStore;\r\n    \r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        \r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if(token) \r\n                    window.localStorage.setItem('token', token);\r\n                else\r\n                    window.localStorage.removeItem('token');\r\n            }\r\n        );\r\n    }\r\n    \r\n    @observable token: string | null = window.localStorage.getItem('token');\r\n    @observable api: any | null = null;\r\n\r\n    @action setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    @action createApi = async () => {\r\n        this.api = new Gitlab({\r\n            host: \"https://gitlab.webix.de/\",\r\n            token: this.token\r\n        });\r\n    }\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { UserSchemaDefault } from \"../models/User\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  \r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n    \r\n  @observable user: UserSchemaDefault | null = null;\r\n  @observable err: string | null = null;\r\n  @observable loadingUser: boolean = false;\r\n\r\n  @action getUser = async () => {\r\n    try {\r\n      this.loadingUser = true;\r\n      const user = await this.rootStore.apiStore.api.Users.current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n        this.loadingUser = false;\r\n        this.err = null\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.user = null;\r\n        this.loadingUser = false;\r\n        this.err = \"Token is not valid\";\r\n      });\r\n      console.log(error);\r\n    }\r\n  }\r\n}","import { createContext } from 'react';\r\nimport { configure } from 'mobx';\r\nimport EventStore from './eventStore';\r\nimport ApiStore from './apiStore';\r\nimport UserStore from './userStore';\r\n\r\nconfigure({enforceActions: 'always'});\r\n\r\nexport class RootStore {\r\n    eventStore: EventStore;\r\n    apiStore: ApiStore;\r\n    userStore: UserStore;\r\n\r\n    constructor() {\r\n        this.eventStore = new EventStore(this);\r\n        this.apiStore = new ApiStore(this);\r\n        this.userStore = new UserStore(this);\r\n    }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport { QuestionCircleOutlined, SearchOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { Typography, Tooltip, Input, Button } from 'antd';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst GitlabForm: React.FC = () => {\r\n   const rootStore = useContext(RootStoreContext);\r\n   const { setToken, createApi, token } = rootStore.apiStore;\r\n   const { getUser, loadingUser, user } = rootStore.userStore;\r\n\r\n   return (\r\n      <Container>\r\n         <Title level={4}>\r\n            GitLab User Token {' '}\r\n            <Tooltip\r\n               title={<p>Create read_api token here: <a href=\"https://gitlab.webix.de/profile/personal_access_tokens\">wwww.gitlab.webix.de/profile/personal_access_tokens</a></p>}\r\n               overlayStyle={{ fontSize: '14px' }}>\r\n               <QuestionCircleOutlined translate style={{ color: '#ff4d4f', fontSize: '16px' }} />\r\n            </Tooltip>\r\n         </Title>\r\n\r\n         <Input.Group compact style={{ width: '35%' }}>\r\n            <Input placeholder=\"Your token\"\r\n               onChange={e => setToken(e.target.value)}\r\n               value={token as string}\r\n               style={{ width: '90%' }}\r\n            />\r\n\r\n            <Button type='primary'\r\n               danger={!user}\r\n               loading={loadingUser}\r\n               icon={user ? <CheckOutlined translate/> : <SearchOutlined translate />}\r\n               style={{ width: '10%' }}\r\n               onClick={() => {\r\n                  createApi();\r\n                  getUser();\r\n               }}></Button>\r\n         </Input.Group>\r\n      </Container>\r\n   );\r\n\r\n};\r\n\r\nexport default observer(GitlabForm);","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\nconst User: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user } = rootStore.userStore;\r\n\r\n  return (\r\n     <>\r\n      {user && user.name}\r\n     </>\r\n  );\r\n\r\n};\r\n\r\nexport default observer(User);","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport { List } from 'semantic-ui-react';\r\nimport { QuestionCircleOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport { Tooltip, Typography, Button, Space, Input } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst EventFilterForm: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { params, setParamName, setParamValue, addParam, getEvents, removeParam } = rootStore.eventStore;\r\n\r\n  return (\r\n    <>\r\n      <Title level={4}>\r\n        Event filter {' '}\r\n        <Tooltip\r\n          title={<p>All parameters: <a href=\"https://docs.gitlab.com/ee/api/events.html#list-currently-authenticated-users-events\">www.docs.gitlab.com/ee/api/events.html#list-currently-authenticated-users-events</a></p>}\r\n          overlayStyle={{ fontSize: '14px' }}>\r\n          <QuestionCircleOutlined translate style={{ color: '#ff4d4f', fontSize: '16px' }} />\r\n        </Tooltip>\r\n      </Title>\r\n\r\n      <List>\r\n        <List.Item>\r\n          {params.map((obj, id) => {\r\n            return (\r\n              <div key={id}>\r\n                <Space>\r\n                  <Input.Group>\r\n                    <Input\r\n                      placeholder='prop name'\r\n                      defaultValue={obj.name}\r\n                      onChange={e => setParamName(e.target.value, id)}\r\n                      style={{ width: '45%' }} />\r\n\r\n                    <Input\r\n                      placeholder='prop value'\r\n                      value={obj.value}\r\n                      onChange={e => setParamValue(e.target.value, id)}\r\n                      style={{ width: '45%' }} />\r\n\r\n                    <Button\r\n                      type='text'\r\n                      icon={<MinusOutlined translate />}\r\n                      style={{ width: '10%' }}\r\n                      onClick={() => removeParam(id)}></Button>\r\n\r\n                  </Input.Group>\r\n                </Space>\r\n              </div>\r\n            )\r\n          }\r\n          )}\r\n        </List.Item>\r\n\r\n        <List.Item>\r\n          <Space>\r\n            <Button onClick={addParam}>Add props</Button>\r\n            <Button onClick={getEvents} type=\"primary\">Submit</Button>\r\n          </Space>\r\n        </List.Item>\r\n      </List>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default observer(EventFilterForm);","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport { Timeline, Typography, Input } from 'antd';\r\nimport { ClockCircleOutlined, MessageOutlined, DeleteOutlined, CheckCircleOutlined, PlusCircleOutlined, ForkOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nvar Scroll = require('react-scroll');\r\nvar dayjs = require('dayjs')\r\n\r\nconst { Link, Element } = Scroll;\r\n\r\nconst Events: React.FC = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const { events, grupedEvents } = rootStore.eventStore;\r\n\r\n    const getTime = (value: any) => {\r\n        var date = new Date(value);\r\n        var newDate = date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n        return dayjs(newDate).format('H:mm');\r\n    }\r\n\r\n    const createObj = (x: any) => {\r\n        var item: any[] = [];\r\n        item.push(<p>{getTime(x.created_at)}</p>);\r\n\r\n        if (x.push_data) {\r\n            item.push(<p>{x.action_name} {x.push_data.ref_type}</p>);\r\n            item.push(<p>{x.push_data.ref}</p>);\r\n        }\r\n        else if (x.note) {\r\n            console.log(x);\r\n            item.push(<p>{x.action_name}</p>);\r\n            item.push(<p>{x.target_title}</p>);\r\n        } else {\r\n            item.push(<p>{x.action_name} {x.target_type}</p>);\r\n            item.push(<p>{x.target_title}</p>);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    const print = (key: string) => {\r\n        let list = [];\r\n        list.push(<Timeline.Item dot={<ClockCircleOutlined translate style={{ fontSize: '18px' }} />} color=\"red\"><h2>{dayjs(key).format('DD. MM. YYYY (dd)')}</h2></Timeline.Item>);\r\n        list.push(grupedEvents[key].map((x: any, id: any) => {\r\n\r\n            var text = createObj(x);\r\n\r\n            switch (x.action_name) {\r\n                case \"commented on\":\r\n                    return (<Timeline.Item dot={<MessageOutlined translate style={{ fontSize: '18px' }} />} color=\"green\">{text}</Timeline.Item>);\r\n\r\n                case \"deleted\":\r\n                    return (<Timeline.Item dot={<DeleteOutlined translate style={{ fontSize: '18px', color: \"gray\" }} />} >{text}</Timeline.Item>);\r\n\r\n                case \"closed\":\r\n                    return (<Timeline.Item dot={<CheckCircleOutlined translate style={{ fontSize: '18px', color: \"red\" }} />} >{text}</Timeline.Item>);\r\n\r\n                case \"opened\":\r\n                    return (<Timeline.Item dot={<PlusCircleOutlined translate style={{ fontSize: '18px', color: \"green\" }} />} >{text}</Timeline.Item>);\r\n\r\n                case \"accepted\":\r\n                    return (<Timeline.Item dot={<ForkOutlined translate style={{ fontSize: '18px', color: \"blue\" }} />} >{text}</Timeline.Item>);\r\n\r\n                default:\r\n                    return (<Timeline.Item>{text}</Timeline.Item>);\r\n            }\r\n\r\n        }));\r\n        return list;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title level={4}>\r\n                Events\r\n            </Title>\r\n\r\n            <nav className=\"vertical-nav\">\r\n                <ul>\r\n                    <li>\r\n                        <Input.Search\r\n                            size=\"large\"\r\n                            placeholder=\"Jira ticket number\"\r\n                            enterButton\r\n                            onSearch={value => {\r\n                                if(!value)\r\n                                    return;\r\n                                window.open(\r\n                                    \"https://jira.smart-digital.de/browse/SMAR-\" + value,\r\n                                    '_blank'\r\n                                );\r\n                            }}\r\n                            style={{ width: 200 }}\r\n                        />\r\n                    </li>\r\n                </ul>\r\n                <ul style={{ float: 'right' }} className=\"timeLineItem\">\r\n                    {Object.keys(grupedEvents).map((key, index) => (\r\n                        <li key={index}>\r\n                            <Link activeClass=\"active\" to={key} spy={true} smooth={true} duration={250} >{dayjs(key).format('DD. MM. YYYY')}</Link>\r\n                        </li>\r\n                    ))}\r\n\r\n                </ul>\r\n            </nav>\r\n            {events && (\r\n                <Timeline className='timeline'>\r\n                    {Object.keys(grupedEvents).map((key, index) => (\r\n                        <Element name={key} className=\"element big\">\r\n                            {print(key)}\r\n                        </Element>\r\n                    ))}\r\n                </Timeline>\r\n            )}\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default observer(Events);","import React, { useContext, useEffect } from \"react\";\r\nimport { RootStoreContext } from \"./stores/rootStore\";\r\nimport GitlabForm from \"./pages/GitlabForm\";\r\nimport User from \"./pages/User\";\r\nimport EventFilterForm from \"./pages/EventFilterForm\";\r\nimport Events from \"./pages/Events\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { GitlabOutlined } from '@ant-design/icons';\r\nimport { Space, Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nconst App: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { token, createApi } = rootStore.apiStore;\r\n  const { getUser } = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      console.log(token);\r\n      createApi();\r\n      getUser()\r\n    }\r\n  }, [getUser, createApi, token])\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"home-page\">\r\n        <Title style={{ fontSize: '62px' }}><GitlabOutlined translate style={{ fontSize: '72px' }} /> WT</Title>\r\n      </div>\r\n\r\n      <Space direction=\"vertical\">\r\n        <GitlabForm />\r\n        <User />\r\n        <EventFilterForm />\r\n        <Events />\r\n      </Space>\r\n\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport './style/style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}